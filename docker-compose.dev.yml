version: '3.8'

services:
  publisher:
    restart: on-failure
    depends_on:
      - gateway
    image: andriiuni/events
    environment:
      EVENT_ENDPOINT: http://gateway:3000/events
    networks:
      - app-network

  gateway:
    restart: on-failure
    stop_grace_period: 120s
    depends_on:
      - nats
      - prisma-migrate
    build:
      context: gateway
    environment:
      NODE_ENV: development
      NATS_URL: nats:4222
      DATABASE_URL: postgres://admin:123456@postgres/main
    networks:
      - app-network
    ports:
      - '3000:3000'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health/liveness']
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 15s

  gateway-processor:
    restart: on-failure
    stop_grace_period: 120s
    depends_on:
      - nats
      - prisma-migrate
    build:
      context: gateway-processor
    environment:
      NODE_ENV: development
      NATS_URL: nats:4222
      DATABASE_URL: postgres://admin:123456@postgres/main
      OUTBOX_POLL_INTERVAL_MS: 500
      OUTBOX_BATCH_SIZE: 500
      OUTBOX_MAX_RETRIES: 2
    networks:
      - app-network
    ports:
      - '3001:3000'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health/liveness']
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 15s

  nats:
    restart: on-failure
    image: nats:latest
    command: ['--jetstream', '--store_dir', '/data/jetstream', '-m', '8222']
    ports:
      - '8222:8222'
    volumes:
      - nats-data:/data/jetstream
    networks:
      - app-network

  postgres:
    restart: on-failure
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: '123456'
      POSTGRES_DB: main
    ports:
      - '5050:5432'
    networks:
      app-network:
    volumes:
      - postgres-data:/var/lib/postgresql/data

  fb-collector:
    restart: on-failure
    stop_grace_period: 120s
    depends_on:
      - prisma-migrate
      - nats
    build:
      context: fb-collector
    environment:
      NODE_ENV: development
      NATS_URL: nats:4222
      NATS_STREAM: FACEBOOK
      NATS_CONSUMER: fb-collector
      DATABASE_URL: postgres://admin:123456@postgres/main
    networks:
      - app-network
    ports:
      - '3002:3000'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health/liveness']
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 15s

  ttk-collector:
    restart: on-failure
    stop_grace_period: 120s
    depends_on:
      - prisma-migrate
      - nats
    build:
      context: ttk-collector
    environment:
      NODE_ENV: development
      NATS_URL: nats:4222
      NATS_STREAM: TIKTOK
      NATS_CONSUMER: ttk-collector
      DATABASE_URL: postgres://admin:123456@postgres/main
    networks:
      - app-network
    ports:
      - '3003:3000'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health/liveness']
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 15s

  reporter:
    restart: on-failure
    depends_on:
      - prisma-migrate
    build:
      context: reporter
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://admin:123456@postgres/main
    ports:
      - '3004:3000'
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health/liveness']
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 15s

  prometheus:
    restart: on-failure
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    networks:
      - app-network

  grafana:
    restart: on-failure
    image: grafana/grafana
    ports:
      - '3005:3000'
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    networks:
      - app-network

  prisma-migrate:
    build: migration-runner
    environment:
      DATABASE_URL: postgres://admin:123456@postgres/main
    depends_on:
      - postgres
    networks:
      - app-network

networks:
  app-network:
volumes:
  nats-data:
  postgres-data:
  grafana-data:
