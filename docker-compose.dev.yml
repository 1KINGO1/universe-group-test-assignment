version: "3.8"

services:
  publisher:
    restart: on-failure
    depends_on:
      - gateway
    image: andriiuni/events
    environment:
      EVENT_ENDPOINT: http://gateway:3000/events
    networks:
      - app-network
  gateway:
    restart: on-failure
    depends_on:
      - nats
      - prisma-migrate
    build:
      context: gateway
    environment:
      NODE_ENV: development
      NATS_URL: nats:4222
      DATABASE_URL: postgres://admin:123456@postgres/main
    networks:
      - app-network
  gateway-processor:
    restart: on-failure
    depends_on:
      - nats
      - prisma-migrate
    build:
      context: gateway-processor
    environment:
      NODE_ENV: development
      NATS_URL: nats:4222
      DATABASE_URL: postgres://admin:123456@postgres/main
      OUTBOX_POLL_INTERVAL_MS: 500
      OUTBOX_BATCH_SIZE: 300
      OUTBOX_MAX_RETRIES: 2
    networks:
      - app-network
  nats:
    restart: on-failure
    image: nats:latest
    command: [
      "--jetstream",
      "--store_dir", "/data/jetstream",
      "-m", "8222"
    ]
    ports:
      - "8222:8222"
    volumes:
      - nats-data:/data/jetstream
    networks:
      - app-network
  postgres:
    restart: on-failure
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: '123456'
      POSTGRES_DB: main
    ports:
      - "5050:5432"
    networks:
      app-network:
    volumes:
      - postgres-data:/var/lib/postgresql/data
  fb-collector:
    restart: on-failure
    depends_on:
      - prisma-migrate
      - nats
    build:
      context: fb-collector
    environment:
      NODE_ENV: development
      NATS_URL: nats:4222
      NATS_STREAM: FACEBOOK
      NATS_CONSUMER: fb-collector
      DATABASE_URL: postgres://admin:123456@postgres/main
    networks:
      - app-network
  ttk-collector:
    restart: on-failure
    depends_on:
      - prisma-migrate
      - nats
    build:
      context: ttk-collector
    environment:
      NODE_ENV: development
      NATS_URL: nats:4222
      NATS_STREAM: TIKTOK
      NATS_CONSUMER: ttk-collector
      DATABASE_URL: postgres://admin:123456@postgres/main
    networks:
      - app-network

  reporter:
    restart: on-failure
    depends_on:
      - prisma-migrate
    build:
      context: reporter
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://admin:123456@postgres/main
    ports:
      - "3000:3000"
    networks:
      - app-network

  prometheus:
    restart: on-failure
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    restart: on-failure
    image: grafana/grafana
    ports:
      - "3001:3000"
    volumes:
      - ./grafana/grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - app-network

  prisma-migrate:
    build: migration-runner
    environment:
      DATABASE_URL: postgres://admin:123456@postgres/main
    depends_on:
      - postgres
    networks:
      - app-network

networks:
  app-network:
volumes:
  nats-data:
  postgres-data: